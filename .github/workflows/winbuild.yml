name: Publish Workflow

on:
  release:
    types:
    - published

env:
  QUAY_REGISTRY_USER: xphyr
  QUAY_IMAGE_REGISTRY: quay.io
  GHCR_IMAGE_REGISTRY: ghcr.io
  GHCR_REGISTRY_USER: ${{ github.actor }}
  GHCR_REGISTRY_PASSWORD: ${{ github.token }}
  QUAY_REGISTRY_PASSWORD: ${{ secrets.QUAY_REGISTRY_PASSWORD }}
  IMAGE_NAME: portunus

jobs:

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: 'latest'

  build-publish-containers:
    name: Build and Publish Containers
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 3
      matrix:
        os: [ubuntu-latest, windows-2019]
        include:
        - os: ubuntu-latest
          file: Dockerfile.linux
          tag: ${{ env.QUAY_IMAGE_REGISTRY }}/${{ env.QUAY_REGISTRY_USER }}/${{ env.IMAGE_NAME }}:multiarch-linux-amd64
        - os: windows-2019
          file: Dockerfile.windows
          tag: ${{ env.QUAY_IMAGE_REGISTRY }}/${{ env.QUAY_REGISTRY_USER }}/${{ env.IMAGE_NAME }}:multiarch-windows-ltsc2019-amd64
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_REGISTRY_USER }}
        password: ${{ secrets.QUAY_REGISTRY_PASSWORD }}
    - name: Docker Build
      run: |
                docker build -f ${{ matrix.file }} -t ${{ matrix.tag }} .
    - name: Docker Push
      run: |
                docker push ${{ matrix.tag }}

  publish-manfiest:
    name: Publish Manifest
    runs-on: ubuntu-latest
    needs: build-publish-containers
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker Manifest
        run: |
          docker manifest create ${{ env.QUAY_IMAGE_REGISTRY }}/${{ env.QUAY_REGISTRY_USER }}/${{ env.IMAGE_NAME }}:multiarch \
            --amend ${{ env.QUAY_IMAGE_REGISTRY }}/${{ env.QUAY_REGISTRY_USER }}/${{ env.IMAGE_NAME }}:multiarch-linux-amd64 \
            --amend ${{ env.QUAY_IMAGE_REGISTRY }}/${{ env.QUAY_REGISTRY_USER }}/${{ env.IMAGE_NAME }}:multiarch-windows-ltsc2019-amd64 
      - name: Docker Annotate
        run: |
          docker manifest annotate --os windows --arch amd64 \
            --os-version "10.0.17763.1817" \
            ${{ env.QUAY_IMAGE_REGISTRY }}/${{ env.QUAY_REGISTRY_USER }}/${{ env.IMAGE_NAME }}:multiarch ${{ env.QUAY_IMAGE_REGISTRY }}/${{ env.QUAY_REGISTRY_USER }}/${{ env.IMAGE_NAME }}:multiarch-windows-ltsc2019-amd64          
    
      - name: Docker Push
        run: |
                    docker manifest push ${{ env.QUAY_REGISTRY_USER }}/${{ env.IMAGE_NAME }}:multiarch